module String {
  fn slice(string, from, to) {
    string_slice(string, from, to)
  }

  fn count(string) {
    string_count(string)
  }

  fn contains?(string, substr) {
    string_contains(string, substr)
  }

  fn starts_with?(string, prefix) {
    slice(string, 0, count(prefix)) == prefix
  }

  fn last(string) {
    let count = count(string)
    slice(string, count - 1, count)
  }

  fn first(string) {
    slice(string, 0, 1)
  }

  fn drop_end(string, n_chars) {
    let count = count(string)
    slice(string, 0, count - n_chars)
  }

  fn drop(string, n_chars) {
    let count = count(string)
    slice(string, n_chars, count)
  }
}
