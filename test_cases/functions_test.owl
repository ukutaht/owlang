module functions {
  fn gimme_six() {
    6
  }
}

module functions_test {
  fn gimme_five() {
    2 + 3
  }

  fn add_five(num) {
    num + 5
  }

  fn add_together(a, b) {
    a + b
  }

  fn empty_function() {}

  fn mccarthy(n) {
    if n > 100 {
      n - 10
    } else {
      mccarthy(mccarthy(n + 11))
    }
  }

  fn arity_test() {
    0
  }

  fn arity_test(one) {
    1
  }

  fn arity_test(one, two) {
    2
  }

  fn capture_gimme_six() {
    functions:gimme_six\0
  }

  fn main() {
    owl_unit:assert_eq(gimme_five(), 5)
    owl_unit:assert_eq(add_five(5), 10)
    owl_unit:assert_eq(add_together(7, 11), 18)
    owl_unit:assert_eq(functions:gimme_six(), 6)
    owl_unit:assert_eq(empty_function(), nil)

    owl_unit:assert_eq(mccarthy(5), 91)
    owl_unit:assert_eq(mccarthy(103), 93)

    owl_unit:assert_eq(arity_test(), 0)
    owl_unit:assert_eq(arity_test(1), 1)
    owl_unit:assert_eq(arity_test(1, 2), 2)

    let captured_gimme_five = gimme_five\0
    owl_unit:assert_eq(captured_gimme_five(), 5)

    let captured_gimme_six = capture_gimme_six()
    owl_unit:assert_eq(captured_gimme_six(), 6)
  }
}
